name: Draft new release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release-draft:
    name: Update Draft Release Notes
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set release date
        run: echo "RELEASE_DATE=$(date -u +"%Y-%m-%d")" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo apt-get install -y gh

      - name: Authenticate gh CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: drafter-config.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(gh api repos/${{ github.repository }}/releases --jq '.[0].tag_name' || echo "")
          if [ -z "$TAG_NAME" ]; then
            echo "No releases found. Skipping cleanup."
            exit 0
          fi
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases/tags/$TAG_NAME --jq '.id')
          BODY=$(gh api repos/${{ github.repository }}/releases/$RELEASE_ID --jq '.body' | sed 's/\[MODIFY\] //g')
          gh api repos/${{ github.repository }}/releases/$RELEASE_ID -X PATCH -F body="$BODY"
