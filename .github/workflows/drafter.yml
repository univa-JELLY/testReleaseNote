# .github/workflows/pr-to-slack.yml

name: PR to Slack

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  notify-slack:
    # PRÏù¥ Î®∏ÏßÄÎêú Í≤ΩÏö∞ÏóêÎßå Ïã§Ìñâ
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Set current date
        run: echo "CURRENT_DATE=$(date -u +\"%Y-%m-%d\")" >> $GITHUB_ENV

      - name: Get PR info
        id: pr-info
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_MERGED_BY="${{ github.event.pull_request.merged_by.login }}"
          REPO_NAME="${{ github.repository }}"

          if [ -z "$PR_BODY" ] || [ $(echo "$PR_BODY" | xargs | wc -c) -lt 5 ]; then
            # Î≥∏Î¨∏Ïù¥ ÏóÜÏúºÎ©¥ Ï†úÎ™©ÏùÑ ÏÇ¨Ïö©
            echo "PR_CONTENT=$PR_TITLE" >> $GITHUB_OUTPUT
          else
            PR_CONTENT=$(echo "$PR_BODY" | tr '\n' ' ' | sed 's/  */ /g' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
            if [ ${#PR_CONTENT} -gt 1000 ]; then
              PR_CONTENT="${PR_CONTENT:0:997}..."
            fi
            echo "PR_CONTENT<<EOF" >> $GITHUB_OUTPUT
            echo "$PR_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

          echo "PR_TITLE=$PR_TITLE"       >> $GITHUB_OUTPUT
          echo "PR_NUMBER=$PR_NUMBER"     >> $GITHUB_OUTPUT
          echo "PR_URL=$PR_URL"           >> $GITHUB_OUTPUT
          echo "PR_AUTHOR=$PR_AUTHOR"     >> $GITHUB_OUTPUT
          echo "PR_MERGED_BY=$PR_MERGED_BY" >> $GITHUB_OUTPUT
          echo "REPO_NAME=$REPO_NAME"     >> $GITHUB_OUTPUT

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Send to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          PR_CONTENT: ${{ steps.pr-info.outputs.PR_CONTENT }}
          PR_TITLE: ${{ steps.pr-info.outputs.PR_TITLE }}
          PR_NUMBER: ${{ steps.pr-info.outputs.PR_NUMBER }}
          PR_URL: ${{ steps.pr-info.outputs.PR_URL }}
          PR_AUTHOR: ${{ steps.pr-info.outputs.PR_AUTHOR }}
          PR_MERGED_BY: ${{ steps.pr-info.outputs.PR_MERGED_BY }}
          REPO_NAME: ${{ steps.pr-info.outputs.REPO_NAME }}
          CURRENT_DATE: ${{ env.CURRENT_DATE }}
        run: |
          # GitHub ÎßàÌÅ¨Îã§Ïö¥ Î≥ºÎìú(**‚Ä¶**) ‚Üí Slack Î≥ºÎìú(*‚Ä¶*)
          SLACK_CONTENT=$(echo "$PR_CONTENT" | sed 's/\*\*\([^*]*\)\*\*/\*\1\*/g')

          SLACK_PAYLOAD=$(jq -n \
            --arg text "üîÑ PRÏù¥ main Î∏åÎûúÏπòÏóê Î≥ëÌï©ÎêòÏóàÏäµÎãàÎã§" \
            --arg title "$PR_TITLE (#$PR_NUMBER)" \
            --arg content "$SLACK_CONTENT" \
            --arg pr_url "$PR_URL" \
            --arg repo "$REPO_NAME" \
            --arg date "$CURRENT_DATE" \
            --arg author "$PR_AUTHOR" \
            --arg merged_by "$PR_MERGED_BY" \
            '{
              text: $text,
              attachments: [
                {
                  color: "#36a64f",
                  title: $title,
                  title_link: $pr_url,
                  text: $content,
                  fields: [
                    { title: "Ï†ÄÏû•ÏÜå", value: $repo, short: true },
                    { title: "Î≥ëÌï© ÏùºÏûê", value: $date, short: true },
                    { title: "ÏûëÏÑ±Ïûê",   value: $author, short: true },
                    { title: "Î≥ëÌï©Ïûê",   value: $merged_by, short: true }
                  ],
                  footer: "GitHub PR",
                  footer_icon: "https://github.githubassets.com/favicon.ico"
                }
              ]
            }'
          )

          # ÌôïÏù∏Ïö© Ï∂úÎ†•
          echo "$SLACK_PAYLOAD" | jq .

          # Ï†ÑÏÜ°
          curl -X POST -H 'Content-Type: application/json' --data "$SLACK_PAYLOAD" "$SLACK_WEBHOOK_URL"
