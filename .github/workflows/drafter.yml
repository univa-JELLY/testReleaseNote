# .github/workflows/drafter.yml
name: Draft new release

on:
  pull_request:
    branches:
      - main # main 브랜치 대상
    types:
      - closed # PR이 closed(머지 또는 닫힘)될 때 트리거

jobs:
  release-draft:
    name: Update Draft Release Notes
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: drafter-config.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            // Draft Release – tagName 은 drafter-config.yaml 의 tag-template 에 따라 결정됨
            const tagName = `v${{ steps.version.outputs.version }}`; // 버전 출처에 맞게 조정
            // 1) 현재 Draft Release 정보 가져오기
            const release = await github.rest.repos.getReleaseByTag({
              owner, repo, tag: tagName
            });
            // 2) 본문(body)에서 “[MODIFY] ” 접두어 제거 (모든 항목)
            const cleanedBody = release.data.body.replace(
              /^- \*\*\[MODIFY\]\s*(.+?)\*\*/gm,
              '- **$1**'
            );
            // 3) Release 업데이트
            await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id: release.data.id,
              body: cleanedBody
            });
