name: Draft new release

on:
  push:
    branches:
      - main

jobs:
  release-draft:
    name: Update Draft Release Notes
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set release date
        run: echo "RELEASE_DATE=$(date -u +"%Y-%m-%d")" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo apt-get install -y gh

      - name: Authenticate gh CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Run Release Drafter
        id: release-drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: drafter-config.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_DATE: ${{ env.RELEASE_DATE }}
        run: |
          # Release Drafter의 출력에서 릴리스 ID 직접 사용
          RELEASE_ID=${{ steps.release-drafter.outputs.id }}
          if [ -z "$RELEASE_ID" ]; then
            echo "No release ID found. Skipping cleanup."
            exit 0
          fi

          echo "Using release ID: $RELEASE_ID"
          echo "Current date: $RELEASE_DATE"

          # 릴리스 정보 가져오기 (드래프트 포함)
          BODY=$(gh api repos/${{ github.repository }}/releases/$RELEASE_ID --jq '.body' || echo "")
          if [ -z "$BODY" ]; then
            echo "Could not get release body. Skipping cleanup."
            exit 0
          fi

          # 모든 유형의 접두사 제거 ([FEAT], [MODIFY], [FIX] 등)
          CLEANED_BODY=$(echo "$BODY" | sed 's/\[[A-Za-z0-9_-]\+\] //g')

          # 날짜 플레이스홀더 대체
          CLEANED_BODY=$(echo "$CLEANED_BODY" | sed "s/RELEASE_DATE_PLACEHOLDER/$RELEASE_DATE/g")

          # 수정된 내용으로 릴리스 업데이트
          echo "Updating release notes for ID: $RELEASE_ID"
          gh api repos/${{ github.repository }}/releases/$RELEASE_ID -X PATCH -F body="$CLEANED_BODY"
